% Check for collisions with objects in the environment and compute the
% total force on the end effector

function F = computeForces(posEE,velocity,posOfBall)
% @param: velocity is a 1x3 vector of velocities in the x y and z
% directions 

global s; 
global radCylinder;
global heightButton; 
global radSphere; 
global x0Sphere;
global y0Sphere;
global z0Sphere; 

x = posEE(1); 
y = posEE(2); 
z = posEE(3); 

%% Spring flat wall 
% Floor 
% define when the flat wall happens
x0Wall = [x y 0];
% find the Force of the flat wall 
kWall = 32;
springWall = (z <= 0); 
FflatWall = -kWall * (posEE - x0Wall);

%% Texture wall 
% right wall 
% define when the texture wall happens 
textureWall = (y >= s/2); 
% find the normal force
x0WallTexture = [x s/2 z]; 
FNormalTexture = abs(-kWall * (posEE - x0WallTexture));
% Vary the constant with position 
% ////// Currently trying to figure how to change texture with position
cTexture = sin(norm(x+z)); 
% Find the force of the textured wall 
Ftexture = - cTexture * cross(FNormalTexture,velocity); 

%% Viscous wall 
% left wall 
% define when the viscous wall happens 
viscousWall = (y <= -s/2); 
% find the normal force 
x0WallViscous = [x -s/2 z];
FNormalViscous = abs(-kWall * (posEE - x0WallViscous)); 
% find the F of viscous; 
cViscous = 32; 
Fviscous = - cViscous * cross(FNormalViscous,velocity); 

%% Button 
% top right of back wall 
% define when the button happens 

%face of the button (square######delete!!!!)
withinY = (y < s/4 + radCylinder && y > s/4 - radCylinder); 
%face of the button (square######delete!!!!)
withinZ = (z < 3*s/4 + radCylinder && z > 3*s/4 - radCylinder); 
%height of the button 
withinX = (x > 0 && x < heightButton); 
button = withinY && withinZ && withinX; 

%find the force of the button 
%Fbutton =;

%% Black hole 
global x0Sphere;
global y0Sphere;
global z0Sphere; 
% top left of back wall
blackHole = (x-x0Sphere)^2+(y-y0Sphere)^2 + (
% define when the black hole happens
%FblackHole = ;

%% Ball 

%% Interaction of ball with spring flat wall 

%% Free space 
FfreeSpace = [0,0,0];

%% Do the switch cases 
F = [];

switch (posEE)
    case springWall
        F = FflatWall;
    case textureWall 
        F = Ftexture; 
    case viscousWall
        F = Fviscous; 
    case button
        F = Fbutton; 
    otherwise %freespace 
        F = FfreeSpace;
        
end 

%F needs to be a 3x1 vector not a 1x3 vector
F = F';

end